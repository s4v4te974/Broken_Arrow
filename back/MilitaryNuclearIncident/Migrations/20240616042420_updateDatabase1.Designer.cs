// <auto-generated />
using System;
using BrokenArrowApp.Src.BrokenArrowApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BrokenArrowApp.Migrations
{
    [DbContext(typeof(BrokenArrowContext))]
    [Migration("20240616042420_updateDatabase1")]
    partial class updateDatabase1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BrokenArrowApp.Models.Entities.BrokenArrow", b =>
                {
                    b.Property<Guid>("BrokenArrowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BubbleDescription")
                        .HasColumnType("text");

                    b.Property<Guid?>("CoordonateId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DisasterDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("FullDescriptionId")
                        .HasColumnType("uuid");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("text");

                    b.Property<Guid>("VehiculeId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("WeaponId")
                        .HasColumnType("uuid");

                    b.HasKey("BrokenArrowId");

                    b.HasIndex("VehiculeId");

                    b.HasIndex("WeaponId");

                    b.ToTable("BrokenArrows");
                });

            modelBuilder.Entity("BrokenArrowApp.Models.Entities.Coordonate", b =>
                {
                    b.Property<Guid>("CoordonateId")
                        .HasColumnType("uuid");

                    b.Property<string>("CountryName")
                        .HasColumnType("text");

                    b.Property<string>("PositionLost")
                        .HasColumnType("text");

                    b.Property<float?>("XCoordonate")
                        .HasColumnType("real");

                    b.Property<float?>("YCoordonate")
                        .HasColumnType("real");

                    b.HasKey("CoordonateId");

                    b.ToTable("Coordonate");
                });

            modelBuilder.Entity("BrokenArrowApp.Models.Entities.Description", b =>
                {
                    b.Property<Guid>("FullDescriptionId")
                        .HasColumnType("uuid");

                    b.Property<string>("FullDescription")
                        .HasColumnType("text");

                    b.HasKey("FullDescriptionId");

                    b.ToTable("Description");
                });

            modelBuilder.Entity("BrokenArrowApp.Models.Entities.Vehicule", b =>
                {
                    b.Property<Guid>("VehiculeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Builder")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("VehiculeDescription")
                        .HasColumnType("text");

                    b.HasKey("VehiculeId");

                    b.ToTable("Vehicule");
                });

            modelBuilder.Entity("BrokenArrowApp.Models.Entities.Weapon", b =>
                {
                    b.Property<Guid>("WeaponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Builder")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("WeaponDescription")
                        .HasColumnType("text");

                    b.HasKey("WeaponId");

                    b.ToTable("Weapon");
                });

            modelBuilder.Entity("BrokenArrowApp.Models.Entities.BrokenArrow", b =>
                {
                    b.HasOne("BrokenArrowApp.Models.Entities.Vehicule", "Vehicule")
                        .WithMany("BrokenArrows")
                        .HasForeignKey("VehiculeId");

                    b.HasOne("BrokenArrowApp.Models.Entities.Weapon", "Weapon")
                        .WithMany("BrokenArrows")
                        .HasForeignKey("WeaponId");

                    b.Navigation("Vehicule");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("BrokenArrowApp.Models.Entities.Coordonate", b =>
                {
                    b.HasOne("BrokenArrowApp.Models.Entities.BrokenArrow", "BrokenArrow")
                        .WithOne("Coordonate")
                        .HasForeignKey("BrokenArrowApp.Models.Entities.Coordonate", "CoordonateId");

                    b.Navigation("BrokenArrow");
                });

            modelBuilder.Entity("BrokenArrowApp.Models.Entities.Description", b =>
                {
                    b.HasOne("BrokenArrowApp.Models.Entities.BrokenArrow", "BrokenArrow")
                        .WithOne("Description")
                        .HasForeignKey("BrokenArrowApp.Models.Entities.Description", "FullDescriptionId");

                    b.Navigation("BrokenArrow");
                });

            modelBuilder.Entity("BrokenArrowApp.Models.Entities.BrokenArrow", b =>
                {
                    b.Navigation("Coordonate");

                    b.Navigation("Description");
                });

            modelBuilder.Entity("BrokenArrowApp.Models.Entities.Vehicule", b =>
                {
                    b.Navigation("BrokenArrows");
                });

            modelBuilder.Entity("BrokenArrowApp.Models.Entities.Weapon", b =>
                {
                    b.Navigation("BrokenArrows");
                });
#pragma warning restore 612, 618
        }
    }
}
